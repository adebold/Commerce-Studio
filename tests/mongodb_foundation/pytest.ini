[tool:pytest]
# MongoDB Foundation Service - TDD Framework Configuration
# ========================================================

testpaths = tests/mongodb_foundation
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src/mongodb_foundation
    --cov-report=html:tests/mongodb_foundation/htmlcov
    --cov-report=term-missing
    --cov-fail-under=85
    --asyncio-mode=auto

# Custom markers for TDD phases
markers =
    red_phase: Tests that should fail initially (RED phase of TDD)
    green_phase: Tests with implementation complete (GREEN phase of TDD)
    refactor_phase: Tests during optimization (REFACTOR phase of TDD)
    performance: Performance benchmark tests (sub-100ms requirement)
    security: Security validation tests
    integration: Integration tests with external services
    unit: Unit tests for individual components
    slow: Tests that take longer to run
    mongodb: Tests requiring MongoDB connection

# Async test configuration
asyncio_mode = auto

# Test discovery
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    .pytest_cache
    htmlcov

# Minimum Python version
minversion = 3.8

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:motor
    ignore::UserWarning:pymongo

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/mongodb_foundation/test.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S