version: '3.8'

services:
  # Base service for shared configuration
  test-base:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ../../:/app
    environment:
      - NODE_ENV=test
      - JEST_JUNIT_OUTPUT_DIR=/app/test-results/junit

  # Shopify integration tests
  shopify-tests:
    extends:
      service: test-base
    command: >
      sh -c "cd apps/shopify && 
             npm install && 
             npm test"
    environment:
      - SHOP_NAME=test-shop.myshopify.com
      - SHOPIFY_ACCESS_TOKEN=test_token
      - SHOPIFY_API_KEY=test_api_key
      - SHOPIFY_API_SECRET=test_api_secret
      - EYEWEAR_ML_API_URL=http://mock-api:3000
      - EYEWEAR_ML_API_KEY=test_eyewear_ml_key

  # Magento integration tests
  magento-tests:
    extends:
      service: test-base
    command: >
      sh -c "cd apps/magento && 
             npm install && 
             npm test"
    environment:
      - MAGENTO_BASE_URL=http://magento:8080
      - MAGENTO_API_TOKEN=test_token
      - EYEWEAR_ML_API_URL=http://mock-api:3000
      - EYEWEAR_ML_API_KEY=test_eyewear_ml_key

  # WooCommerce integration tests
  woocommerce-tests:
    extends:
      service: test-base
    command: >
      sh -c "cd apps/woocommerce && 
             npm install && 
             npm test"
    environment:
      - WP_URL=http://wordpress:8080
      - WP_USERNAME=admin
      - WP_PASSWORD=password
      - EYEWEAR_ML_API_URL=http://mock-api:3000
      - EYEWEAR_ML_API_KEY=test_eyewear_ml_key

  # BigCommerce integration tests
  bigcommerce-tests:
    extends:
      service: test-base
    command: >
      sh -c "cd apps/bigcommerce && 
             npm install && 
             npm test"
    environment:
      - BC_STORE_HASH=test_store_hash
      - BC_CLIENT_ID=test_client_id
      - BC_ACCESS_TOKEN=test_access_token
      - EYEWEAR_ML_API_URL=http://mock-api:3000
      - EYEWEAR_ML_API_KEY=test_eyewear_ml_key

  # Mock API service for testing
  mock-api:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ../../tests/mocks:/app
    command: node server.js
    ports:
      - "3000:3000"

  # Magento service for integration testing
  magento:
    image: magento/magento2devbox-web
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_PORT=3306
      - MYSQL_USER=magento
      - MYSQL_PASSWORD=magento
      - MYSQL_DATABASE=magento
    ports:
      - "8080:80"
    depends_on:
      - mariadb

  # MariaDB for Magento
  mariadb:
    image: bitnami/mariadb:10.6
    environment:
      - MARIADB_USER=magento
      - MARIADB_PASSWORD=magento
      - MARIADB_DATABASE=magento
      - MARIADB_ROOT_PASSWORD=root_password

  # WordPress with WooCommerce for integration testing
  wordpress:
    image: wordpress:latest
    environment:
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    ports:
      - "8081:80"
    depends_on:
      - mysql

  # MySQL for WordPress
  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
      - MYSQL_ROOT_PASSWORD=root_password