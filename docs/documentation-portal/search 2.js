/**
 * VARAi Documentation Portal Search Functionality
 * 
 * This script provides search functionality for the documentation portal.
 * It allows users to search for content across all documentation pages.
 */

// Search index - this would typically be generated by a build process
// For demonstration purposes, we're defining a simple index here
const searchIndex = {
    // This would be populated with actual content during build
    pages: []
};

// Function to initialize the search functionality
function initSearch() {
    const searchInput = document.getElementById('search-input');
    const searchButton = document.getElementById('search-button');
    
    // Load the search index
    loadSearchIndex();
    
    // Add event listeners
    if (searchInput && searchButton) {
        searchInput.addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                performSearch();
            }
        });
        
        searchButton.addEventListener('click', performSearch);
    }
}

// Function to load the search index
function loadSearchIndex() {
    // In a real implementation, this would load the search index from a JSON file
    // For demonstration purposes, we're creating a simple index here
    searchIndex.pages = [
        {
            title: "Merchant Onboarding Guide",
            url: "../user-guides/merchant/onboarding.html",
            content: "Learn how to set up your VARAi account, configure your store, and get started with the platform.",
            keywords: ["merchant", "onboarding", "setup", "account", "configuration"]
        },
        {
            title: "Dashboard Usage Guide",
            url: "../user-guides/merchant/dashboard.html",
            content: "Understand how to navigate and use the VARAi merchant dashboard to manage your eyewear business.",
            keywords: ["merchant", "dashboard", "navigation", "analytics", "management"]
        },
        {
            title: "Product Management Guide",
            url: "../user-guides/merchant/product-management.html",
            content: "Learn how to add, edit, and manage your eyewear products in the VARAi platform.",
            keywords: ["merchant", "product", "management", "inventory", "catalog"]
        },
        {
            title: "Virtual Try-On Guide",
            url: "../user-guides/end-user/virtual-try-on.html",
            content: "Learn how to use the virtual try-on feature to see how different eyewear frames look on your face.",
            keywords: ["end-user", "virtual try-on", "AR", "augmented reality", "frames"]
        },
        {
            title: "System Administration Guide",
            url: "../user-guides/administrator/system-administration.html",
            content: "Learn how to set up, configure, and maintain the VARAi platform infrastructure.",
            keywords: ["administrator", "system", "configuration", "maintenance", "infrastructure"]
        }
        // Additional pages would be added here
    ];
}

// Function to perform the search
function performSearch() {
    const searchInput = document.getElementById('search-input');
    const searchTerm = searchInput.value.trim().toLowerCase();
    
    if (searchTerm.length < 2) {
        alert('Please enter at least 2 characters to search.');
        return;
    }
    
    // Perform the search
    const results = searchIndex.pages.filter(page => {
        // Check if the search term is in the title, content, or keywords
        return page.title.toLowerCase().includes(searchTerm) ||
               page.content.toLowerCase().includes(searchTerm) ||
               page.keywords.some(keyword => keyword.toLowerCase().includes(searchTerm));
    });
    
    // Display the results
    displaySearchResults(results, searchTerm);
}

// Function to display the search results
function displaySearchResults(results, searchTerm) {
    // Create a modal to display the results
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'block';
    
    const modalContent = document.createElement('div');
    modalContent.className = 'modal-content';
    
    // Add a close button
    const closeButton = document.createElement('span');
    closeButton.className = 'close';
    closeButton.innerHTML = '&times;';
    closeButton.addEventListener('click', function() {
        document.body.removeChild(modal);
    });
    
    // Add a title
    const title = document.createElement('h2');
    title.textContent = `Search Results for "${searchTerm}"`;
    
    // Add the results
    const resultsList = document.createElement('div');
    
    if (results.length === 0) {
        const noResults = document.createElement('p');
        noResults.textContent = 'No results found. Please try a different search term.';
        resultsList.appendChild(noResults);
    } else {
        results.forEach(result => {
            const resultItem = document.createElement('div');
            resultItem.className = 'search-result';
            
            const resultTitle = document.createElement('h3');
            const resultLink = document.createElement('a');
            resultLink.href = result.url;
            resultLink.textContent = result.title;
            resultTitle.appendChild(resultLink);
            
            const resultContent = document.createElement('p');
            resultContent.textContent = result.content;
            
            resultItem.appendChild(resultTitle);
            resultItem.appendChild(resultContent);
            resultsList.appendChild(resultItem);
        });
    }
    
    // Assemble the modal
    modalContent.appendChild(closeButton);
    modalContent.appendChild(title);
    modalContent.appendChild(resultsList);
    modal.appendChild(modalContent);
    
    // Add the modal to the page
    document.body.appendChild(modal);
    
    // Close the modal when clicking outside of it
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            document.body.removeChild(modal);
        }
    });
}

// Initialize the search functionality when the page loads
document.addEventListener('DOMContentLoaded', initSearch);