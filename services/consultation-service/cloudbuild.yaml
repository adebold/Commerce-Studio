steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/ml-datadriven-recos/consultation-service:v1',
      '-t', 'gcr.io/ml-datadriven-recos/consultation-service:latest',
      '.'
    ]
    dir: 'services/consultation-service'

  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/ml-datadriven-recos/consultation-service:v1']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/ml-datadriven-recos/consultation-service:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'consultation-service'
      - '--image=gcr.io/ml-datadriven-recos/consultation-service:v1'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--concurrency=1000'
      - '--max-instances=100'
      - '--min-instances=1'
      - '--timeout=300'
      - '--set-env-vars=NODE_ENV=production'
      - '--set-env-vars=I18N_SERVICE_URL=https://internationalization-service-ml-datadriven-recos.us-central1.run.app'
      - '--set-env-vars=FACE_ANALYSIS_SERVICE_URL=https://face-analysis-service-ml-datadriven-recos.us-central1.run.app'
      - '--set-env-vars=SUPPORTED_LANGUAGES=en-US,nl-NL,de-DE,es-ES,pt-PT,fr-FR,en-IE'
      - '--set-env-vars=CORS_ORIGIN=https://management-portal-ml-datadriven-recos.us-central1.run.app,https://brillen-amsterdam-demo-ml-datadriven-recos.us-central1.run.app'
      - '--set-env-vars=LOG_LEVEL=info'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s'