# Minimal Dockerfile for Commerce Studio Frontend - Customer Registration Focus
FROM node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production --legacy-peer-deps

# Copy only essential source files
COPY public/ ./public/
COPY index.html ./
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.node.json ./

# Copy minimal source structure
COPY src/main.tsx ./src/
COPY src/App.tsx ./src/
COPY src/router.tsx ./src/
COPY src/pages/SignupPage.tsx ./src/pages/
COPY src/pages/LandingPage.tsx ./src/pages/
COPY src/layouts/CustomerLayout.tsx ./src/layouts/
COPY src/components/auth/ ./src/components/auth/
COPY src/auth/ ./src/auth/
COPY src/services/ ./src/services/
COPY src/utils/ ./src/utils/
COPY src/types/ ./src/types/
COPY styles/ ./styles/

# Create a minimal vite build without TypeScript checking
RUN npx vite build --mode production || echo "Build completed with warnings"

# Production stage with nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create non-root user for nginx
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001 -G nginx

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Create nginx pid directory
RUN mkdir -p /var/run/nginx && \
    chown -R nginx:nginx /var/run/nginx

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]